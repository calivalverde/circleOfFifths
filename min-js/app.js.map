{"version":3,"sources":["index.js","interaction.js"],"names":["naturalNotes","modesList","chordTypes","id","type","mode","orderSharps","orderFlats","allKeys","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","Key","name","Math","abs","listAccidentals","accidentals","slice","map","accidental","keyIndex","indexOf","pitchCollection","concat","newFamilly","pitch","i","length","obj","pitchesTemp","pitches","builder","index","j","push","shift","du","sol","re","la","sib","reb","listOfKeys","extractAllKeySigantures","Object","keys","reOrderKeys","ul","document","createElement","setAttribute","forEach","eachKey","li","button","innerText","appendChild","querySelector","buttons","querySelectorAll","svgPaths","newKey","onclick","value","print","staff","innerHTML","modes","classList","add","eachPath","window","onload","init","list","action","keySelected","elm","className"],"mappings":"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","file":"app.js","sourcesContent":["const naturalNotes = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\nconst modesList = ['Ionian', 'Dorian', 'Phrygian', 'Lydian', 'Mixolydian', 'Aeolian', 'Locrian'];\n\nconst chordTypes = [\n    { id: 'I', type: 'maj7', mode: 'Ionian' },\n    { id: 'II', type: 'm7', mode: 'Dorian' },\n    { id: 'III', type: 'm7', mode: 'Phrygian' },\n    { id: 'IV', type: 'maj7', mode: 'Lydian' },\n    { id: 'V', type: '7', mode: 'Mixolydian' },\n    { id: 'VI', type: 'm7', mode: 'Eolian' },\n    { id: 'VII', type: 'm7(b5)', mode: 'Locrian' }\n];\n\nconst orderSharps = ['F', 'C', 'G', 'D', 'A', 'E'];\nconst orderFlats = ['B', 'E', 'A', 'D', 'G', 'C'];\nconst allKeys = {\n    Gb: -6,\n    Db: -5,\n    Ab: -4,\n    Eb: -3,\n    Bb: -2,\n    F: -1,\n    C: 0,\n    G: 1,\n    D: 2,\n    A: 3,\n    E: 4,\n    B: 5,\n};\n\nclass Key {\n    constructor(name) {\n        this.name = name;\n    }\n\n    get sharpsOrFlats() {\n        //combierte el valor a entero positivo.\n        return allKeys[this.name] < 0 ? Math.abs(allKeys[this.name]) + '♭' :\n            allKeys[this.name] === 0 ? 'no flats or sharps.' :\n            allKeys[this.name] + '♯';\n    }\n    get accidentals() {\n        let listAccidentals;\n        if (allKeys[this.name] < 0) {\n            // Crea un array con las alteraciones\n            let accidentals = orderFlats.slice(0, Math.abs(allKeys[this.name]));\n            // Combina el nombre de la alteración con el símbolo\n            listAccidentals = accidentals.map((accidental) => {\n                return accidental + '♭';\n            });\n        } else {\n            let accidentals = orderSharps.slice(0, (allKeys[this.name]));\n            listAccidentals = accidentals.map((accidental) => {\n                return accidental + '#';\n            });\n        };\n        return listAccidentals;\n    }\n\n    get pitches() {\n        //identifica el indice de la tónica en array de notas naturales [0] pasa el primer caracter. \n        let keyIndex = naturalNotes.indexOf(this.name[0]);\n        //nuevo array con orden de notas naturales para esta tónica.\n        let pitchCollection = naturalNotes.slice(keyIndex).concat(naturalNotes.slice(0, keyIndex));\n        // define un array con los accidentes de la tonalidad llamando la propiedad.\n        let accidentals  = this.accidentals;\n\n        // crea nueva familia con notas y sus alteraciones respectivas\n        let newFamilly = pitchCollection.map((pitch) => {\n            for (let i = 0; i < accidentals.length; i++) {\n                if (pitch === accidentals[i][0]) {\n                    return accidentals[i];\n                }\n            }\n            return pitch;\n        });\n        return newFamilly;\n    }\n\n    get chords() {\n        let obj = {};\n        let pitchesTemp = this.pitches;\n        let builder = pitchesTemp.map((pitch, index) => {\n            obj[chordTypes[index].id] = pitch.concat(chordTypes[index].type);\n        });\n        return obj;\n    }\n\n    get modes() {\n        let builder = [];\n        let pitchesTemp = this.pitches;\n        for (let i = 0; i < pitchesTemp.length; i++) {\n            for (let j = 0; j < modesList.length; j++) {\n                builder.push(pitchesTemp[i] + ' ' + modesList[j]);\n                pitchesTemp.shift();\n            }\n        }\n        return builder;\n    }\n\n}; //class Key\n\n//Tester\nlet du = new Key('C');\nlet sol = new Key('G');\nlet re = new Key('D');\nlet la = new Key('A');\nlet sib = new Key('Bb');\nlet reb = new Key('Db');\n\n///////////////////////////////////////\n//////CIRCLE OUTPUT\n///////////////////////////////////////\n\n//Crear los buttons\nfunction listOfKeys() {\n    //crea una variable con todas las tonalidades\n    let extractAllKeySigantures = Object.keys(allKeys);\n\n    //reorganiza el arraglo para adapartalo al diseño\n    let reOrderKeys = extractAllKeySigantures.slice(9).concat(extractAllKeySigantures.slice(0, 9));\n\n    //una variable ul que coniente el UL\n    let ul = document.createElement('ul');\n    ul.setAttribute('class', 'circle-container z-depth-4');\n\n    reOrderKeys.forEach(function(eachKey) {\n        //crea una lista por cada elemento del arreglo  \n        let li = document.createElement('li');\n        //crea los botones por cada tonica    \n        let button = document.createElement('button');\n        button.setAttribute('value', eachKey);\n        button.setAttribute('class', 'z-depth-1 waves-effect waves-light blue-grey-text text-darken-4');\n        button.innerText = eachKey;\n        //imprime en ul el contenido de li\n        li.appendChild(button);\n        ul.appendChild(li);\n    });\n\n    //imprime el UL\n    document.querySelector('#myList').appendChild(ul);\n\n} //listOfKeys\n\n// Se llama a la función para Output de los botones\nlistOfKeys();\n\n\n\n\n\n///////////////////////////////////////\n//////INPUT\n///////////////////////////////////////\n\nconst buttons = document.querySelectorAll('ul.circle-container > li > button');\nlet svgPaths = document.querySelectorAll('.staff svg > path');\nlet newKey;\n\n//Set the new Key\nbuttons.forEach((button) => {\n    (function() {\n        button.onclick = function() {\n            newKey = new Key(button.value);\n            print();\n            staff();\n        };\n    })(button);\n});\n\n//Print newKey results\nfunction print() {\n    document.querySelector('#key').innerHTML = `${newKey.name} Major`;\n    document.querySelector('#scale').innerHTML = `Scale: ${newKey.pitches}`;\n    document.querySelector('#modes').innerHTML = `<h4>Modes</h4> ${newKey.modes}`;\n    //document.querySelector('#chords').innerHTML = `<h4>Chords</h4> ${newKey.chords};\n}\n\n//Print Staff\nfunction staff() {\n    document.querySelector('.staff').classList.add('active');\n    //reset de clase\n    svgPaths.forEach(function(eachPath) {\n        eachPath.setAttribute(\"class\", \"inactive\");\n    });\n    //si el segundo caracter de la propiedad \"accidentals\" es \"♭\"\n    if (newKey.accidentals != 0 && newKey.accidentals[0][1] === \"♭\") {\n        for (let i = 0; i < svgPaths.length; i++) {\n            //i+7 para brincarse lo 7 sostenidos del SVG\n            svgPaths[i + 7].setAttribute(\"class\", \"active\");\n            if (i === (newKey.accidentals.length - 1)) {\n                break;\n            }\n        }\n    } else if (newKey.accidentals != 0 && newKey.accidentals[0][1] === \"#\") {\n        for (let i = 0; i < svgPaths.length; i++) {\n            svgPaths[i].setAttribute(\"class\", \"active\");\n            if (i === (newKey.accidentals.length - 1)) {\n                break;\n            }\n        }\n    }\n}","window.onload = init;\n\nfunction init() {\n  \n  let list = document.querySelectorAll(\"ul.circle-container > li\");\n\n  for (let i = 0; i < list.length; i++) {\n    (function(index) {\n      list[index].onclick = function() {\n        //llama a la funcion y le manda el indice\n        action(index);\n      };\n    })(i);\n  }\n\n  function action(keySelected) {\n    //reset\n    list.forEach(function(elm) {\n      elm.className = \"inactive\";\n    });\n    //clase 'key' a seleccion\n    list[keySelected].className = \"key\";\n    //reoganiza la lista para hacerla un ciclo\n    if (keySelected == 0) {\n      list[keySelected + 1].className = \"dominant\";\n      list[list.length - 1].className = \"subdominant\";\n    } else if (keySelected == list.length - 1) {\n      list[keySelected - 1].className = \"subdominant\";\n      list[0].className = \"dominant\";\n    } else {\n      list[keySelected - 1].className = \"subdominant\";\n      list[keySelected + 1].className = \"dominant\";\n    }\n  }\n\n};//init()\n\n\n"]}